{"ast":null,"code":"var _jsxFileName = \"/Users/didaryilmaz/Documents/GitHub/YardimMasasi/yardim-masasi/src/ListTickets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ModuleRegistry } from '@ag-grid-community/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModuleRegistry.registerModules([ClientSideRowModelModule]);\nconst ListTickets = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  const fetchTickets = useCallback(() => {\n    fetch(`http://localhost:5094/api/Ticket/getAllTickets`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setRowData(data.tickets || data)) // Backend'in verdiği response formatına göre düzenle\n    .catch(err => console.error(\"Ticket verisi çekme hatası:\", err));\n  }, [token]);\n  useEffect(() => {\n    if (!token) {\n      navigate(\"/login\");\n    } else {\n      fetchTickets();\n    }\n  }, [token, fetchTickets, navigate]);\n  const columnDefs = [{\n    headerName: \"ID\",\n    field: \"id\"\n  }, {\n    headerName: \"Kullanıcı ID\",\n    field: \"userId\"\n  }, {\n    headerName: \"Başlık\",\n    field: \"title\"\n  }, {\n    headerName: \"Açıklama\",\n    field: \"description\"\n  }, {\n    headerName: \"Durum\",\n    field: \"status\"\n  }, {\n    headerName: \"Kategori\",\n    field: \"category\"\n  }, {\n    headerName: \"Öncelik\",\n    field: \"priority\"\n  }, {\n    headerName: \"Oluşturulma Tarihi\",\n    field: \"createdAt\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 600,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: columnDefs,\n      pagination: true,\n      paginationPageSize: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ListTickets, \"skX5ufvdR3cWk6alNgu9ifc+94s=\", false, function () {\n  return [useNavigate];\n});\n_c = ListTickets;\nexport default ListTickets;\nvar _c;\n$RefreshReg$(_c, \"ListTickets\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","AgGridReact","ClientSideRowModelModule","ModuleRegistry","jsxDEV","_jsxDEV","registerModules","ListTickets","_s","rowData","setRowData","navigate","token","localStorage","getItem","fetchTickets","fetch","headers","Authorization","then","res","json","data","tickets","catch","err","console","error","columnDefs","headerName","field","className","style","height","width","children","pagination","paginationPageSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/didaryilmaz/Documents/GitHub/YardimMasasi/yardim-masasi/src/ListTickets.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; \nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ModuleRegistry } from '@ag-grid-community/core';\n    \n    ModuleRegistry.registerModules([ClientSideRowModelModule]);\n    \n    const ListTickets = () => {\n      const [rowData, setRowData] = useState([]);\n      const navigate = useNavigate(); \n      const token = localStorage.getItem(\"token\");\n    \n      const fetchTickets = useCallback(() => {\n        fetch(`http://localhost:5094/api/Ticket/getAllTickets`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n          .then(res => res.json())\n          .then(data => setRowData(data.tickets || data)) // Backend'in verdiği response formatına göre düzenle\n          .catch(err => console.error(\"Ticket verisi çekme hatası:\", err));\n      }, [token]);\n    \n      useEffect(() => {\n        if (!token) {\n          navigate(\"/login\");\n        } else {\n          fetchTickets();\n        }\n      }, [token, fetchTickets, navigate]); \n    \n      const columnDefs = [\n        { headerName: \"ID\", field: \"id\" },\n        { headerName: \"Kullanıcı ID\", field: \"userId\" },\n        { headerName: \"Başlık\", field: \"title\" },\n        { headerName: \"Açıklama\", field: \"description\" },\n        { headerName: \"Durum\", field: \"status\" },\n        { headerName: \"Kategori\", field: \"category\" },\n        { headerName: \"Öncelik\", field: \"priority\" },\n        { headerName: \"Oluşturulma Tarihi\", field: \"createdAt\" },\n      ];\n    \n      return (\n        <div className=\"ag-theme-alpine\" style={{ height: 600, width: \"100%\" }}>\n          <AgGridReact\n            rowData={rowData}\n            columnDefs={columnDefs}\n            pagination={true}\n            paginationPageSize={20}\n          />\n        </div>\n      );\n    };\n    \n    export default ListTickets;\n    \n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}