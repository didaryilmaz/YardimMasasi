{"ast":null,"code":"var _jsxFileName = \"/Users/didaryilmaz/Documents/GitHub/YardimMasasi/yardim-masasi/src/ListTickets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { ClientSideRowModelModule } from 'ag-grid-community';\nimport { ModuleRegistry } from '@ag-grid-community/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModuleRegistry.registerModules([ClientSideRowModelModule]);\nconst ListTickets = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  const fetchTickets = useCallback(() => {\n    fetch(\"http://localhost:5094/api/Ticket/getAllTicketsByRole\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        if (res.status === 403) {\n          throw new Error(\"Yetkisiz erişim\");\n        } else {\n          throw new Error(\"Sunucu hatası\");\n        }\n      }\n      return res.json();\n    }).then(data => {\n      console.log(\"Gelen ticket verisi:\", data);\n      setRowData(data);\n    }).catch(err => {\n      console.error(\"Ticket verisi çekilirken hata oluştu:\", err);\n      alert(\"Ticket verisi alınamadı veya yetkiniz yok.\");\n      navigate(\"/login\"); // Hatalıysa login sayfasına yönlendirilir\n    });\n  }, [token, navigate]);\n  useEffect(() => {\n    if (!token) {\n      navigate(\"/login\");\n    } else {\n      fetchTickets();\n    }\n  }, [token, fetchTickets, navigate]);\n  const columnDefs = [{\n    headerName: \"ID\",\n    field: \"id\"\n  }, {\n    headerName: \"Kullanıcı ID\",\n    field: \"userId\"\n  }, {\n    headerName: \"Başlık\",\n    field: \"title\"\n  }, {\n    headerName: \"Açıklama\",\n    field: \"description\"\n  }, {\n    headerName: \"Durum\",\n    field: \"status\"\n  }, {\n    headerName: \"Kategori\",\n    field: \"category\"\n  }, {\n    headerName: \"Öncelik\",\n    field: \"priority\"\n  }, {\n    headerName: \"Oluşturulma Tarihi\",\n    field: \"createdAt\",\n    valueFormatter: params => {\n      const date = new Date(params.value);\n      return date.toLocaleString(\"tr-TR\");\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mevcut Talepler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ag-theme-alpine\",\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          rowData: rowData,\n          columnDefs: columnDefs,\n          modules: [ClientSideRowModelModule],\n          pagination: true,\n          paginationPageSize: 20,\n          domLayout: \"autoHeight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ListTickets, \"skX5ufvdR3cWk6alNgu9ifc+94s=\", false, function () {\n  return [useNavigate];\n});\n_c = ListTickets;\nexport default ListTickets;\nvar _c;\n$RefreshReg$(_c, \"ListTickets\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","AgGridReact","ClientSideRowModelModule","ModuleRegistry","jsxDEV","_jsxDEV","registerModules","ListTickets","_s","rowData","setRowData","navigate","token","localStorage","getItem","fetchTickets","fetch","headers","Authorization","then","res","ok","status","Error","json","data","console","log","catch","err","error","alert","columnDefs","headerName","field","valueFormatter","params","date","Date","value","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","modules","pagination","paginationPageSize","domLayout","_c","$RefreshReg$"],"sources":["/Users/didaryilmaz/Documents/GitHub/YardimMasasi/yardim-masasi/src/ListTickets.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; \nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { ClientSideRowModelModule } from 'ag-grid-community';\nimport { ModuleRegistry } from '@ag-grid-community/core';\n\nModuleRegistry.registerModules([ClientSideRowModelModule]);\n\nconst ListTickets = () => {\n  const [rowData, setRowData] = useState([]);\n  const navigate = useNavigate(); \n  const token = localStorage.getItem(\"token\");\n\n  const fetchTickets = useCallback(() => {\n    fetch(\"http://localhost:5094/api/Ticket/getAllTicketsByRole\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then(res => {\n        if (!res.ok) {\n          if (res.status === 403) {\n            throw new Error(\"Yetkisiz erişim\");\n          } else {\n            throw new Error(\"Sunucu hatası\");\n          }\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log(\"Gelen ticket verisi:\", data);\n        setRowData(data);\n      })\n      .catch(err => {\n        console.error(\"Ticket verisi çekilirken hata oluştu:\", err);\n        alert(\"Ticket verisi alınamadı veya yetkiniz yok.\");\n        navigate(\"/login\"); // Hatalıysa login sayfasına yönlendirilir\n      });\n  }, [token, navigate]);\n\n  useEffect(() => {\n    if (!token) {\n      navigate(\"/login\");\n    } else {\n      fetchTickets();\n    }\n  }, [token, fetchTickets, navigate]);\n\n  const columnDefs = [\n    { headerName: \"ID\", field: \"id\" },\n    { headerName: \"Kullanıcı ID\", field: \"userId\" },\n    { headerName: \"Başlık\", field: \"title\" },\n    { headerName: \"Açıklama\", field: \"description\" },\n    { headerName: \"Durum\", field: \"status\" },\n    { headerName: \"Kategori\", field: \"category\" },\n    { headerName: \"Öncelik\", field: \"priority\" },\n    { \n      headerName: \"Oluşturulma Tarihi\", \n      field: \"createdAt\", \n      valueFormatter: params => {\n        const date = new Date(params.value);\n        return date.toLocaleString(\"tr-TR\");\n      }\n    },\n  ];\n\n  return (\n    <div className=\"ticket-container\">\n      <div className=\"ticket-grid\">\n        <h3>Mevcut Talepler</h3>\n        <div className=\"ag-theme-alpine\">\n          <AgGridReact\n            rowData={rowData}\n            columnDefs={columnDefs}\n            modules={[ClientSideRowModelModule]}\n            pagination={true}\n            paginationPageSize={20}\n            domLayout=\"autoHeight\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListTickets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}